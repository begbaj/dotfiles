#===============================================================================
# PLUGINS
#===============================================================================
# To install tpm, run the following:
#   git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
set -g @plugin 'tmux-plugins/tpm'                       # Core: Plugin manager
set -g @plugin 'thewtex/tmux-mem-cpu-load'              # Core: show mem,cpu and laod in status line
set -g @plugin 'tmux-plugins/tmux-battery'              # Core: show battery percentage

set -g @plugin 'tmux-plugins/tmux-sensible'             # Utility: configurations everybody can agree
set -g @plugin 'laktak/extrakto'                        # Utility: copy/paste lines from the terminal usinf fzf
set -g @treemux-tree-nvim-init-file '~/.config/tmux/plugins/treemux/configs/treemux_init.lua'
set -g @plugin 'kiyoon/treemux'                         # Utility: use nvim-tree as a file explorer

# ++END PLUGINS+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#===============================================================================
# APPEARENCE
#===============================================================================

set -g @batt_icon_charge_tier8 'ðŸŒ•'
set -g @batt_icon_charge_tier7 'ðŸŒ–'
set -g @batt_icon_charge_tier6 'ðŸŒ–'
set -g @batt_icon_charge_tier5 'ðŸŒ—'
set -g @batt_icon_charge_tier4 'ðŸŒ—'
set -g @batt_icon_charge_tier3 'ðŸŒ˜'
set -g @batt_icon_charge_tier2 'ðŸŒ˜'
set -g @batt_icon_charge_tier1 'ðŸŒ‘'
set -g @batt_icon_status_charged 'ðŸ”‹'
set -g @batt_icon_status_charging 'âš¡'
set -g @batt_icon_status_discharging 'ðŸ‘Ž'
set -g @batt_color_status_primary_charged '#3daee9'
set -g @batt_color_status_primary_charging '#3daee9'

set -g default-terminal "st-256color"
set -g status-style bg=cyan,fg=black
set -g window-status-current-style bg=blue,fg=black
set -g window-status-style bg=cyan,fg=black

# tmux-battery
set -g status-right '#{battery_icon} #{battery_percentage} #[fg=green]#($TMUX_PLUGIN_MANAGER_PATH/tmux-mem-cpu-load/tmux-mem-cpu-load --colors --powerline-right --interval 2)#[default]'
set -g status-interval 2

# ++END APPEARENCE++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#===============================================================================
# BINDINGS
#===============================================================================
# set r to reload configuration
unbind r    # later use to reload configuration
unbind v    # later use to vertical split
unbind h    # later use to horizontal split
unbind %    # no use
unbind '"'  # no use

bind r source-file ~/.config/tmux/tmux.conf \; display "Configuration reloaded!"

# Set new panes to open in current directory
bind c new-window -c "#{pane_current_path}"
bind h split-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

# move to pane with hjkl
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

# Set vi compatibility
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# EXTRAKTO
set -g @extrakto_key F


# ++END BINDINGS+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
